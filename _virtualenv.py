import os
import telebot
from telebot.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from flask import Flask, request
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask
server = Flask(__name__)

# üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
client = gspread.authorize(creds)
sheet = client.open("Parfumebot").sheet1

# üíæ –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–µ–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
def save_user_data(name, phone_number):
    all_records = sheet.get_all_records()
    for record in all_records:
        if record['name'] == name and record['phone_number'] == phone_number:
            return False  # –î—É–±–ª–∏–∫–∞—Ç
    sheet.append_row([name, phone_number])
    return True

# ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

# üèÅ /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('üõç –ö–∞—Ç–∞–ª–æ–≥', 'üìç –ê–¥—Ä–µ—Å–∞')
    markup.row('‚ùì –í–æ–ø—Ä–æ—Å—ã', 'üì≤ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é')
    markup.row('üìù –ù–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫—É')
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞—Ä—Ñ—é–º–µ—Ä–Ω—ã–π –±–æ—Ç!', reply_markup=markup)

# üÜò /help
@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(message.chat.id,
        "üÜò *–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:*\n\n"
        "‚Ä¢ /start ‚Äî –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ /help ‚Äî –ü–æ–º–æ—â—å\n"
        "‚Ä¢ '–ù–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫—É' ‚Äî –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–º—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
        "‚Ä¢ '–ö–∞—Ç–∞–ª–æ–≥' ‚Äî –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞—Ä–æ–º–∞—Ç—ã\n"
        "‚Ä¢ '–ê–¥—Ä–µ—Å–∞' ‚Äî –ì–¥–µ –Ω–∞—Å –Ω–∞–π—Ç–∏\n"
        "‚Ä¢ '–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é' ‚Äî –°–≤—è–∑–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ WhatsApp –∏–ª–∏ Instagram",
        parse_mode='Markdown')

# üìù –ù–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫—É
@bot.message_handler(func=lambda message: message.text.lower() == 'üìù –Ω–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫—É')
def start_purchase(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    bot.register_next_step_handler(msg, process_name)

def process_name(message):
    name = message.text.strip()
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    bot.register_next_step_handler(msg, process_phone, name)

def process_phone(message, name):
    phone_number = message.text.strip()
    success = save_user_data(name, phone_number)
    if success:
        bot.send_message(message.chat.id, "‚úÖ –°–ø–∞—Å–∏–±–æ, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
    else:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –±—ã–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Ä–∞–Ω–µ–µ.")

# üõç –ö–∞—Ç–∞–ª–æ–≥
@bot.message_handler(func=lambda m: m.text == 'üõç –ö–∞—Ç–∞–ª–æ–≥')
def show_catalog(message):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('üë® –ú—É–∂—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã', 'üë© –ñ–µ–Ω—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã')
    markup.row('üåÄ –£–Ω–∏—Å–µ–∫—Å', 'üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∞—Ä–æ–º–∞—Ç–æ–≤:', reply_markup=markup)

# üë® –ú—É–∂—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã
@bot.message_handler(func=lambda m: m.text == 'üë® –ú—É–∂—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã')
def men_perfumes(message):
    markup = InlineKeyboardMarkup()
    markup.add(
        InlineKeyboardButton('üõí –ö—É–ø–∏—Ç—å', url='https://wa.me/77478076545'),
        InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='back_to_catalog')
    )
    perfume_list = (
        'üë® *–ú—É–∂—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã:* \n\n'
        '‚Ä¢ Montblanc Explorer - 1 –º–ª, 1500 —Ç–≥\n'
        '‚Ä¢ Dior Sauvage - 1 –º–ª, 1500 —Ç–≥\n'
        '‚Ä¢ Bleu de Chanel - 1 –º–ª, 1500 —Ç–≥\n'
        '‚Ä¢ Aventus by Creed - 1 –º–ª, 1500 —Ç–≥\n'
        '‚Ä¢ Versace Eros - 1 –º–ª, 1500 —Ç–≥'
    )
    bot.send_message(message.chat.id, perfume_list, parse_mode='Markdown', reply_markup=markup)

# üë© –ñ–µ–Ω—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã
@bot.message_handler(func=lambda m: m.text == 'üë© –ñ–µ–Ω—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã')
def women_perfumes(message):
    markup = InlineKeyboardMarkup()
    markup.add(
        InlineKeyboardButton('üõí –ö—É–ø–∏—Ç—å', url='https://wa.me/77478076545'),
        InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='back_to_catalog')
    )
    bot.send_message(message.chat.id, 'üë© –ñ–µ–Ω—Å–∫–∏–µ –∞—Ä–æ–º–∞—Ç—ã:\n‚Ä¢ White Chocola Extrait Richard', reply_markup=markup)

# üåÄ –£–Ω–∏—Å–µ–∫—Å
@bot.message_handler(func=lambda m: m.text == 'üåÄ –£–Ω–∏—Å–µ–∫—Å')
def unisex_perfumes(message):
    markup = InlineKeyboardMarkup()
    markup.add(
        InlineKeyboardButton('üõí –ö—É–ø–∏—Ç—å', url='https://wa.me/77478076545'),
        InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='back_to_catalog')
    )
    bot.send_message(message.chat.id, 'üåÄ –£–Ω–∏—Å–µ–∫—Å –∞—Ä–æ–º–∞—Ç—ã:\n‚Ä¢ Cassiopea Tiziana Terenzi', reply_markup=markup)

# üîô –ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥ (inline)
@bot.callback_query_handler(func=lambda call: call.data == 'back_to_catalog')
def callback_back(call):
    show_catalog(call.message)

# üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
@bot.message_handler(func=lambda m: m.text == 'üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
def back_to_menu(message):
    start(message)

# üìç –ê–¥—Ä–µ—Å–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤
@bot.message_handler(func=lambda m: m.text == 'üìç –ê–¥—Ä–µ—Å–∞')
def addresses(message):
    text = (
        'üìç –ù–∞—à–∏ –º–∞–≥–∞–∑–∏–Ω—ã:\n'
        '1Ô∏è‚É£ –¢–î –ì–£–õ–õ–ò–í–ï–†, –±—É—Ç–∏–∫ 15–∞, 1 —ç—Ç–∞–∂ (–ù–∞–∑–∞—Ä–±–∞–µ–≤–∞ 48/1)\n'
        '2Ô∏è‚É£ BATYRMALL - GREENWICH (–ö–∞–º–∑–∏–Ω–∞ 67/1)'
    )
    bot.send_message(message.chat.id, text)

# ‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
@bot.message_handler(func=lambda m: m.text == '‚ùì –í–æ–ø—Ä–æ—Å—ã')
def faqs(message):
    text = (
        '‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n'
        'üîπ *–ö–∞–∫ –≤–∞—Å –Ω–∞–π—Ç–∏?*\n–û—Ç–≤–µ—Ç: –ù–∞—à–∏ –º–∞–≥–∞–∑–∏–Ω—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å–∞–º, —É–∫–∞–∑–∞–Ω–Ω—ã–º –≤ —Ä–∞–∑–¥–µ–ª–µ "–ê–¥—Ä–µ—Å–∞".\n\n'
        'üîπ *–ß—Ç–æ –º—ã –ø—Ä–æ–¥–∞–µ–º?*\n–û—Ç–≤–µ—Ç: –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –º—É–∂—Å–∫–∏–µ, –∂–µ–Ω—Å–∫–∏–µ –∏ —É–Ω–∏—Å–µ–∫—Å –∞—Ä–æ–º–∞—Ç—ã, –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ.\n\n'
        'üîπ *–ö–∞–∫–æ–π –º–Ω–µ –Ω—É–∂–µ–Ω –∑–∞–ø–∞—Ö?*\n–û—Ç–≤–µ—Ç: –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –º—ã –ø–æ–º–æ–∂–µ–º –≤—ã–±—Ä–∞—Ç—å!'
    )
    bot.send_message(message.chat.id, text, parse_mode='Markdown')

# üì≤ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
@bot.message_handler(func=lambda m: m.text == 'üì≤ –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é')
def consult(message):
    markup = InlineKeyboardMarkup()
    markup.add(
        InlineKeyboardButton('üìû WhatsApp', url='https://wa.me/77478076545'),
        InlineKeyboardButton('üì∏ Instagram', url='https://instagram.com/umma_iissu')
    )
    bot.send_message(message.chat.id, '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ üëá', reply_markup=markup)

# Webhook-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@server.route(f'/{TOKEN}', methods=['POST'])
def get_message():
    logging.debug("Received update from Telegram")
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return '!', 200

@server.route('/')
def webhook():
    bot.remove_webhook()
    # –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–≥–ª—É—à–∫–∞, –æ–±–Ω–æ–≤–∏–º –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è
    bot.set_webhook(url=f'https://parfume-bot.onrender.com/{TOKEN}')
    return 'Webhook set', 200

if __name__ == '__main__':
    logging.info("Starting Flask server...")
    bot.remove_webhook()
    server.run(host='0.0.0.0', port=int(os.getenv('PORT', 5000)))